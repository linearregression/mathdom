MathDOM - accessing terms through a MathML DOM in Python
--------------------------------------------------------

I'd be really glad to hear if this is useful. And maybe you have an
idea how to make it better. :) Just send me an email:
Stefan Behnel <scoder@users.sourceforge.net>

See LICENSE file for licensing.

You can find the latest version at
http://mathdom.sourceforge.net


What is MathDOM?
----------------

The package comprises parsers for a subset of Content MathML 2.0 and
infix terms (using pyparsing [1]). It provides access to the term tree
through a DOM (based on PyXML/4DOM [2] or, preferably, lxml [3]) and
allows serialization to Content MathML and literal terms in infix,
prefix and postfix notation. It supports subclassable input/output
filters, e.g. for Python terms.

If you want to test it, run 'examples/infix.py'.


A quick example:
----------------

>>> from mathml.lmathdom import MathDOM                     # use lxml implementation
>>> doc = MathDOM.fromString("+2^x+4*-5i/6", "infix_term")  # parse infix term
>>> [ n.value() for n in doc.xpath(u'//math:cn[@type="integer"]') ] # find integers
[2, 4, 6]
>>> for apply_tag in doc.xpath(u'//math:apply[math:plus]'): # replace '+' with '-'
...     apply_tag.set_operator(u'minus')
>>> from mathml.utils import pyterm                         # register Python term builder
>>> doc.serialize("python")                                 # serialize to Python term
u'2 ** x - 4 * (-5j) / 6'

Simple, isn't it ?


Current status:
---------------

This is currently beta software. The API is mostly stabilizing, but
may still be subject to changes. The output and DOM APIs will likely
evolve without major compatibility breaks. The subclassable parser is
relatively new and has not had enough test cases to declare it stable.

Please keep in mind that the best way to stabilize an API is to use it
and give feedback. Every comment or suggestion is appreciated, as are
patches. If you write your own parsers or serializers, feel free to
submit them.


Regarding lxml:
---------------

The lxml based implementation shares most of the code with the PyXML
one, but replaces the DOM implementation with a patched version of
lxml [3], an XML API similar to ElementTree [4], implemented on top of
libxml2 [5]. That makes it much faster than the pure Python
implementation (just try test/test.py for a comparison) and it
supports more XML features, like XSLT and XInclude. Please apply the
patch that comes with MathDOM if you want to use lxml. The patch
applies to release versions of lxml, currently 0.8. It has been
submitted for incremental inclusion in lxml. You may also consider
getting the patched SVN version from a branch:

svn co http://codespeak.net/svn/lxml/branch/scoder1 contrib/lxml
(contrib/lxml is the local target directory)


The files:
----------

* Installation:

setup.py               - distutils, try "python setup.py install"


* Patching lxml:

lxml.patch             - apply in the lxml source directory (use -p0).


* Examples are in "examples/":

examples/infix.py      - example program: read a term, write out MathML,
                         infix, prefix, postfix representations
                         -> START HERE if you want to figure out how
                         everything works.

examples/dom.py        - example program: read a term, do some DOM stuff

examples/ldom.py       - example program: read a term, do some lxml/xpath stuff


* The actual package source is in "mathml/":

mathml/mathdom.py      - the DOM implemention

mathml/lmathdom.py     - the lxml implemention (supports XSLT, RelaxNG, etc.)

mathml/xmlterm.py      - SAX generator for the termparser AST

mathml/termparser.py   - parser for literal infix terms

mathml/termbuilder.py  - serializer for literal terms,
                         framework for output converters


* Extensions are in "mathml/utils/":

mathml/utils/pyterm.py - a Python term serializer

mathml/utils/mathmlc2p.xsl
mathml/utils/ctop.xsl  - XSLT converters: Content MathML -> Presentation MathML

mathml/utils/sax_pmathml.py
                       - PyMathML [6] integration through the SAX interface


* PyMathML [6] is in "mathml/pmathml/"

  For convenience, PyMathML [6] is included in MathDOM. PyMathML is a
  renderer for Presentational MathML, written by Gustavo Carneiro and
  distributed under the terms of the LGPL (if you can't accept that,
  don't use it!). For questions regarding PyMathML, please contact the
  PyMathML project at SourceForge. I do not maintain that package!
  If you want to use PyMathML with MathDOM, take a look at
  mathml/utils/sax_pmathml.py


References
----------

[1] pyparsing:   http://pyparsing.sf.net/
[2] PyXML:       http://pyxml.sf.net/
[3] lxml:        http://codespeak.net/lxml/
[4] ElementTree: http://effbot.org/zone/element-index.htm
[5] libxml2:     http://xmlsoft.org/
[6] PyMathML:    http://pymathml.sf.net/


Have fun!
